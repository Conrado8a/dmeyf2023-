
with  ##competencia_02_crudo2 as (
select
case when [numero_de_cliente] = '' then null else cast(convert(float,[numero_de_cliente]) as int) end as [numero_de_cliente],
case when [foto_mes] = '' then null else cast(convert(float,[foto_mes]) as int) end as [foto_mes],
case when [active_quarter] = '' then null else cast(convert(float,[active_quarter]) as int) end as [active_quarter],
case when [cliente_vip] = '' then null else cast(convert(float,[cliente_vip]) as int) end as [cliente_vip],
case when [internet] = '' then null else cast(convert(float,[internet]) as int) end as [internet],
case when [cliente_edad] = '' then null else cast(convert(float,[cliente_edad]) as int) end as [cliente_edad],
case when [cliente_antiguedad] = '' then null else cast(convert(float,[cliente_antiguedad]) as int) end as [cliente_antiguedad],
case when [mrentabilidad] = '' then null else cast(convert(float,[mrentabilidad]) as int) end as [mrentabilidad],
case when [mrentabilidad_annual] = '' then null else cast(convert(float,[mrentabilidad_annual]) as int) end as [mrentabilidad_annual],
case when [mcomisiones] = '' then null else cast(convert(float,[mcomisiones]) as int) end as [mcomisiones],
case when [mactivos_margen] = '' then null else cast(convert(float,[mactivos_margen]) as int) end as [mactivos_margen],
case when [mpasivos_margen] = '' then null else cast(convert(float,[mpasivos_margen]) as int) end as [mpasivos_margen],
case when [cproductos] = '' then null else cast(convert(float,[cproductos]) as int) end as [cproductos],
case when [tcuentas] = '' then null else cast(convert(float,[tcuentas]) as int) end as [tcuentas],
case when [ccuenta_corriente] = '' then null else cast(convert(float,[ccuenta_corriente]) as int) end as [ccuenta_corriente],
case when [mcuenta_corriente_adicional] = '' then null else cast(convert(float,[mcuenta_corriente_adicional]) as int) end as [mcuenta_corriente_adicional],
case when [mcuenta_corriente] = '' then null else cast(convert(float,[mcuenta_corriente]) as int) end as [mcuenta_corriente],
case when [ccaja_ahorro] = '' then null else cast(convert(float,[ccaja_ahorro]) as int) end as [ccaja_ahorro],
case when [mcaja_ahorro] = '' then null else cast(convert(float,[mcaja_ahorro]) as int) end as [mcaja_ahorro],
case when [mcaja_ahorro_adicional] = '' then null else cast(convert(float,[mcaja_ahorro_adicional]) as int) end as [mcaja_ahorro_adicional],
case when [mcaja_ahorro_dolares] = '' then null else cast(convert(float,[mcaja_ahorro_dolares]) as int) end as [mcaja_ahorro_dolares],
case when [cdescubierto_preacordado] = '' then null else cast(convert(float,[cdescubierto_preacordado]) as int) end as [cdescubierto_preacordado],
case when [mcuentas_saldo] = '' then null else cast(convert(float,[mcuentas_saldo]) as int) end as [mcuentas_saldo],
case when [ctarjeta_debito] = '' then null else cast(convert(float,[ctarjeta_debito]) as int) end as [ctarjeta_debito],
case when [ctarjeta_debito_transacciones] = '' then null else cast(convert(float,[ctarjeta_debito_transacciones]) as int) end as [ctarjeta_debito_transacciones],
case when [mautoservicio] = '' then null else cast(convert(float,[mautoservicio]) as int) end as [mautoservicio],
case when [ctarjeta_visa] = '' then null else cast(convert(float,[ctarjeta_visa]) as int) end as [ctarjeta_visa],
case when [ctarjeta_visa_transacciones] = '' then null else cast(convert(float,[ctarjeta_visa_transacciones]) as int) end as [ctarjeta_visa_transacciones],
case when [mtarjeta_visa_consumo] = '' then null else cast(convert(float,[mtarjeta_visa_consumo]) as int) end as [mtarjeta_visa_consumo],
case when [ctarjeta_master] = '' then null else cast(convert(float,[ctarjeta_master]) as int) end as [ctarjeta_master],
case when [ctarjeta_master_transacciones] = '' then null else cast(convert(float,[ctarjeta_master_transacciones]) as int) end as [ctarjeta_master_transacciones],
case when [mtarjeta_master_consumo] = '' then null else cast(convert(float,[mtarjeta_master_consumo]) as int) end as [mtarjeta_master_consumo],
case when [cprestamos_personales] = '' then null else cast(convert(float,[cprestamos_personales]) as int) end as [cprestamos_personales],
case when [mprestamos_personales] = '' then null else cast(convert(float,[mprestamos_personales]) as int) end as [mprestamos_personales],
case when [cprestamos_prendarios] = '' then null else cast(convert(float,[cprestamos_prendarios]) as int) end as [cprestamos_prendarios],
case when [mprestamos_prendarios] = '' then null else cast(convert(float,[mprestamos_prendarios]) as int) end as [mprestamos_prendarios],
case when [cprestamos_hipotecarios] = '' then null else cast(convert(float,[cprestamos_hipotecarios]) as int) end as [cprestamos_hipotecarios],
case when [mprestamos_hipotecarios] = '' then null else cast(convert(float,[mprestamos_hipotecarios]) as int) end as [mprestamos_hipotecarios],
case when [cplazo_fijo] = '' then null else cast(convert(float,[cplazo_fijo]) as int) end as [cplazo_fijo],
case when [mplazo_fijo_dolares] = '' then null else cast(convert(float,[mplazo_fijo_dolares]) as int) end as [mplazo_fijo_dolares],
case when [mplazo_fijo_pesos] = '' then null else cast(convert(float,[mplazo_fijo_pesos]) as int) end as [mplazo_fijo_pesos],
case when [cinversion1] = '' then null else cast(convert(float,[cinversion1]) as int) end as [cinversion1],
case when [minversion1_pesos] = '' then null else cast(convert(float,[minversion1_pesos]) as int) end as [minversion1_pesos],
case when [minversion1_dolares] = '' then null else cast(convert(float,[minversion1_dolares]) as int) end as [minversion1_dolares],
case when [cinversion2] = '' then null else cast(convert(float,[cinversion2]) as int) end as [cinversion2],
case when [minversion2] = '' then null else cast(convert(float,[minversion2]) as int) end as [minversion2],
case when [cseguro_vida] = '' then null else cast(convert(float,[cseguro_vida]) as int) end as [cseguro_vida],
case when [cseguro_auto] = '' then null else cast(convert(float,[cseguro_auto]) as int) end as [cseguro_auto],
case when [cseguro_vivienda] = '' then null else cast(convert(float,[cseguro_vivienda]) as int) end as [cseguro_vivienda],
case when [cseguro_accidentes_personales] = '' then null else cast(convert(float,[cseguro_accidentes_personales]) as int) end as [cseguro_accidentes_personales],
case when [ccaja_seguridad] = '' then null else cast(convert(float,[ccaja_seguridad]) as int) end as [ccaja_seguridad],
case when [cpayroll_trx] = '' then null else cast(convert(float,[cpayroll_trx]) as int) end as [cpayroll_trx],
case when [mpayroll] = '' then null else cast(convert(float,[mpayroll]) as int) end as [mpayroll],
case when [mpayroll2] = '' then null else cast(convert(float,[mpayroll2]) as int) end as [mpayroll2],
case when [cpayroll2_trx] = '' then null else cast(convert(float,[cpayroll2_trx]) as int) end as [cpayroll2_trx],
case when [ccuenta_debitos_automaticos] = '' then null else cast(convert(float,[ccuenta_debitos_automaticos]) as int) end as [ccuenta_debitos_automaticos],
case when [mcuenta_debitos_automaticos] = '' then null else cast(convert(float,[mcuenta_debitos_automaticos]) as int) end as [mcuenta_debitos_automaticos],
case when [ctarjeta_visa_debitos_automaticos] = '' then null else cast(convert(float,[ctarjeta_visa_debitos_automaticos]) as int) end as [ctarjeta_visa_debitos_automaticos],
case when [mttarjeta_visa_debitos_automaticos] = '' then null else cast(convert(float,[mttarjeta_visa_debitos_automaticos]) as int) end as [mttarjeta_visa_debitos_automaticos],
case when [ctarjeta_master_debitos_automaticos] = '' then null else cast(convert(float,[ctarjeta_master_debitos_automaticos]) as int) end as [ctarjeta_master_debitos_automaticos],
case when [mttarjeta_master_debitos_automaticos] = '' then null else cast(convert(float,[mttarjeta_master_debitos_automaticos]) as int) end as [mttarjeta_master_debitos_automaticos],
case when [cpagodeservicios] = '' then null else cast(convert(float,[cpagodeservicios]) as int) end as [cpagodeservicios],
case when [mpagodeservicios] = '' then null else cast(convert(float,[mpagodeservicios]) as int) end as [mpagodeservicios],
case when [cpagomiscuentas] = '' then null else cast(convert(float,[cpagomiscuentas]) as int) end as [cpagomiscuentas],
case when [mpagomiscuentas] = '' then null else cast(convert(float,[mpagomiscuentas]) as int) end as [mpagomiscuentas],
case when [ccajeros_propios_descuentos] = '' then null else cast(convert(float,[ccajeros_propios_descuentos]) as int) end as [ccajeros_propios_descuentos],
case when [mcajeros_propios_descuentos] = '' then null else cast(convert(float,[mcajeros_propios_descuentos]) as int) end as [mcajeros_propios_descuentos],
case when [ctarjeta_visa_descuentos] = '' then null else cast(convert(float,[ctarjeta_visa_descuentos]) as int) end as [ctarjeta_visa_descuentos],
case when [mtarjeta_visa_descuentos] = '' then null else cast(convert(float,[mtarjeta_visa_descuentos]) as int) end as [mtarjeta_visa_descuentos],
case when [ctarjeta_master_descuentos] = '' then null else cast(convert(float,[ctarjeta_master_descuentos]) as int) end as [ctarjeta_master_descuentos],
case when [mtarjeta_master_descuentos] = '' then null else cast(convert(float,[mtarjeta_master_descuentos]) as int) end as [mtarjeta_master_descuentos],
case when [ccomisiones_mantenimiento] = '' then null else cast(convert(float,[ccomisiones_mantenimiento]) as int) end as [ccomisiones_mantenimiento],
case when [mcomisiones_mantenimiento] = '' then null else cast(convert(float,[mcomisiones_mantenimiento]) as int) end as [mcomisiones_mantenimiento],
case when [ccomisiones_otras] = '' then null else cast(convert(float,[ccomisiones_otras]) as int) end as [ccomisiones_otras],
case when [mcomisiones_otras] = '' then null else cast(convert(float,[mcomisiones_otras]) as int) end as [mcomisiones_otras],
case when [cforex] = '' then null else cast(convert(float,[cforex]) as int) end as [cforex],
case when [cforex_buy] = '' then null else cast(convert(float,[cforex_buy]) as int) end as [cforex_buy],
case when [mforex_buy] = '' then null else cast(convert(float,[mforex_buy]) as int) end as [mforex_buy],
case when [cforex_sell] = '' then null else cast(convert(float,[cforex_sell]) as int) end as [cforex_sell],
case when [mforex_sell] = '' then null else cast(convert(float,[mforex_sell]) as int) end as [mforex_sell],
case when [ctransferencias_recibidas] = '' then null else cast(convert(float,[ctransferencias_recibidas]) as int) end as [ctransferencias_recibidas],
case when [mtransferencias_recibidas] = '' then null else cast(convert(float,[mtransferencias_recibidas]) as int) end as [mtransferencias_recibidas],
case when [ctransferencias_emitidas] = '' then null else cast(convert(float,[ctransferencias_emitidas]) as int) end as [ctransferencias_emitidas],
case when [mtransferencias_emitidas] = '' then null else cast(convert(float,[mtransferencias_emitidas]) as int) end as [mtransferencias_emitidas],
case when [cextraccion_autoservicio] = '' then null else cast(convert(float,[cextraccion_autoservicio]) as int) end as [cextraccion_autoservicio],
case when [mextraccion_autoservicio] = '' then null else cast(convert(float,[mextraccion_autoservicio]) as int) end as [mextraccion_autoservicio],
case when [ccheques_depositados] = '' then null else cast(convert(float,[ccheques_depositados]) as int) end as [ccheques_depositados],
case when [mcheques_depositados] = '' then null else cast(convert(float,[mcheques_depositados]) as int) end as [mcheques_depositados],
case when [ccheques_emitidos] = '' then null else cast(convert(float,[ccheques_emitidos]) as int) end as [ccheques_emitidos],
case when [mcheques_emitidos] = '' then null else cast(convert(float,[mcheques_emitidos]) as int) end as [mcheques_emitidos],
case when [ccheques_depositados_rechazados] = '' then null else cast(convert(float,[ccheques_depositados_rechazados]) as int) end as [ccheques_depositados_rechazados],
case when [mcheques_depositados_rechazados] = '' then null else cast(convert(float,[mcheques_depositados_rechazados]) as int) end as [mcheques_depositados_rechazados],
case when [ccheques_emitidos_rechazados] = '' then null else cast(convert(float,[ccheques_emitidos_rechazados]) as int) end as [ccheques_emitidos_rechazados],
case when [mcheques_emitidos_rechazados] = '' then null else cast(convert(float,[mcheques_emitidos_rechazados]) as int) end as [mcheques_emitidos_rechazados],
case when [tcallcenter] = '' then null else cast(convert(float,[tcallcenter]) as int) end as [tcallcenter],
case when [ccallcenter_transacciones] = '' then null else cast(convert(float,[ccallcenter_transacciones]) as int) end as [ccallcenter_transacciones],
case when [thomebanking] = '' then null else cast(convert(float,[thomebanking]) as int) end as [thomebanking],
case when [chomebanking_transacciones] = '' then null else cast(convert(float,[chomebanking_transacciones]) as int) end as [chomebanking_transacciones],
case when [ccajas_transacciones] = '' then null else cast(convert(float,[ccajas_transacciones]) as int) end as [ccajas_transacciones],
case when [ccajas_consultas] = '' then null else cast(convert(float,[ccajas_consultas]) as int) end as [ccajas_consultas],
case when [ccajas_depositos] = '' then null else cast(convert(float,[ccajas_depositos]) as int) end as [ccajas_depositos],
case when [ccajas_extracciones] = '' then null else cast(convert(float,[ccajas_extracciones]) as int) end as [ccajas_extracciones],
case when [ccajas_otras] = '' then null else cast(convert(float,[ccajas_otras]) as int) end as [ccajas_otras],
case when [catm_trx] = '' then null else cast(convert(float,[catm_trx]) as int) end as [catm_trx],
case when [matm] = '' then null else cast(convert(float,[matm]) as int) end as [matm],
case when [catm_trx_other] = '' then null else cast(convert(float,[catm_trx_other]) as int) end as [catm_trx_other],
case when [matm_other] = '' then null else cast(convert(float,[matm_other]) as int) end as [matm_other],
case when [ctrx_quarter] = '' then null else cast(convert(float,[ctrx_quarter]) as int) end as [ctrx_quarter],
case when [tmobile_app] = '' then null else cast(convert(float,[tmobile_app]) as int) end as [tmobile_app],
case when [cmobile_app_trx] = '' then null else cast(convert(float,[cmobile_app_trx]) as int) end as [cmobile_app_trx],
case when [Master_delinquency] = '' then null else cast(convert(float,[Master_delinquency]) as int) end as [Master_delinquency],
case when [Master_status] = '' then null else cast(convert(float,[Master_status]) as int) end as [Master_status],
case when [Master_mfinanciacion_limite] = '' then null else cast(convert(float,[Master_mfinanciacion_limite]) as int) end as [Master_mfinanciacion_limite],
case when [Master_Fvencimiento] = '' then null else cast(convert(float,[Master_Fvencimiento]) as int) end as [Master_Fvencimiento],
case when [Master_Finiciomora] = '' then null else cast(convert(float,[Master_Finiciomora]) as int) end as [Master_Finiciomora],
case when [Master_msaldototal] = '' then null else cast(convert(float,[Master_msaldototal]) as int) end as [Master_msaldototal],
case when [Master_msaldopesos] = '' then null else cast(convert(float,[Master_msaldopesos]) as int) end as [Master_msaldopesos],
case when [Master_msaldodolares] = '' then null else cast(convert(float,[Master_msaldodolares]) as int) end as [Master_msaldodolares],
case when [Master_mconsumospesos] = '' then null else cast(convert(float,[Master_mconsumospesos]) as int) end as [Master_mconsumospesos],
case when [Master_mconsumosdolares] = '' then null else cast(convert(float,[Master_mconsumosdolares]) as int) end as [Master_mconsumosdolares],
case when [Master_mlimitecompra] = '' then null else cast(convert(float,[Master_mlimitecompra]) as int) end as [Master_mlimitecompra],
case when [Master_madelantopesos] = '' then null else cast(convert(float,[Master_madelantopesos]) as int) end as [Master_madelantopesos],
case when [Master_madelantodolares] = '' then null else cast(convert(float,[Master_madelantodolares]) as int) end as [Master_madelantodolares],
case when [Master_fultimo_cierre] = '' then null else cast(convert(float,[Master_fultimo_cierre]) as int) end as [Master_fultimo_cierre],
case when [Master_mpagado] = '' then null else cast(convert(float,[Master_mpagado]) as int) end as [Master_mpagado],
case when [Master_mpagospesos] = '' then null else cast(convert(float,[Master_mpagospesos]) as int) end as [Master_mpagospesos],
case when [Master_mpagosdolares] = '' then null else cast(convert(float,[Master_mpagosdolares]) as int) end as [Master_mpagosdolares],
case when [Master_fechaalta] = '' then null else cast(convert(float,[Master_fechaalta]) as int) end as [Master_fechaalta],
case when [Master_mconsumototal] = '' then null else cast(convert(float,[Master_mconsumototal]) as int) end as [Master_mconsumototal],
case when [Master_cconsumos] = '' then null else cast(convert(float,[Master_cconsumos]) as int) end as [Master_cconsumos],
case when [Master_cadelantosefectivo] = '' then null else cast(convert(float,[Master_cadelantosefectivo]) as int) end as [Master_cadelantosefectivo],
case when [Master_mpagominimo] = '' then null else cast(convert(float,[Master_mpagominimo]) as int) end as [Master_mpagominimo],
case when [Visa_delinquency] = '' then null else cast(convert(float,[Visa_delinquency]) as int) end as [Visa_delinquency],
case when [Visa_status] = '' then null else cast(convert(float,[Visa_status]) as int) end as [Visa_status],
case when [Visa_mfinanciacion_limite] = '' then null else cast(convert(float,[Visa_mfinanciacion_limite]) as int) end as [Visa_mfinanciacion_limite],
case when [Visa_Fvencimiento] = '' then null else cast(convert(float,[Visa_Fvencimiento]) as int) end as [Visa_Fvencimiento],
case when [Visa_Finiciomora] = '' then null else cast(convert(float,[Visa_Finiciomora]) as int) end as [Visa_Finiciomora],
case when [Visa_msaldototal] = '' then null else cast(convert(float,[Visa_msaldototal]) as int) end as [Visa_msaldototal],
case when [Visa_msaldopesos] = '' then null else cast(convert(float,[Visa_msaldopesos]) as int) end as [Visa_msaldopesos],
case when [Visa_msaldodolares] = '' then null else cast(convert(float,[Visa_msaldodolares]) as int) end as [Visa_msaldodolares],
case when [Visa_mconsumospesos] = '' then null else cast(convert(float,[Visa_mconsumospesos]) as int) end as [Visa_mconsumospesos],
case when [Visa_mconsumosdolares] = '' then null else cast(convert(float,[Visa_mconsumosdolares]) as int) end as [Visa_mconsumosdolares],
case when [Visa_mlimitecompra] = '' then null else cast(convert(float,[Visa_mlimitecompra]) as int) end as [Visa_mlimitecompra],
case when [Visa_madelantopesos] = '' then null else cast(convert(float,[Visa_madelantopesos]) as int) end as [Visa_madelantopesos],
case when [Visa_madelantodolares] = '' then null else cast(convert(float,[Visa_madelantodolares]) as int) end as [Visa_madelantodolares],
case when [Visa_fultimo_cierre] = '' then null else cast(convert(float,[Visa_fultimo_cierre]) as int) end as [Visa_fultimo_cierre],
case when [Visa_mpagado] = '' then null else cast(convert(float,[Visa_mpagado]) as int) end as [Visa_mpagado],
case when [Visa_mpagospesos] = '' then null else cast(convert(float,[Visa_mpagospesos]) as int) end as [Visa_mpagospesos],
case when [Visa_mpagosdolares] = '' then null else cast(convert(float,[Visa_mpagosdolares]) as int) end as [Visa_mpagosdolares],
case when [Visa_fechaalta] = '' then null else cast(convert(float,[Visa_fechaalta]) as int) end as [Visa_fechaalta],
case when [Visa_mconsumototal] = '' then null else cast(convert(float,[Visa_mconsumototal]) as int) end as [Visa_mconsumototal],
case when [Visa_cconsumos] = '' then null else cast(convert(float,[Visa_cconsumos]) as int) end as [Visa_cconsumos],
case when [Visa_cadelantosefectivo] = '' then null else cast(convert(float,[Visa_cadelantosefectivo]) as int) end as [Visa_cadelantosefectivo],
case when [Visa_mpagominimo] = '' then null else cast(convert(float,[Visa_mpagominimo]) as int) end as [Visa_mpagominimo],
cast(
case
	when foto_mes = '202006' then 0.79
	when foto_mes = '202007' then 0.81
	when foto_mes = '202008' then 0.84
	when foto_mes = '202009' then 0.87
	when foto_mes = '202010' then 0.90
	when foto_mes = '202011' then 0.93
	when foto_mes = '202012' then 0.96
	when foto_mes = '202101' then 1.00 --referencia mes 0
	when foto_mes = '202102' then 1.04
	when foto_mes = '202103' then 1.08
	when foto_mes = '202104' then 1.13
	when foto_mes = '202105' then 1.17
	when foto_mes = '202106' then 1.21
	when foto_mes = '202107' then 1.25
	else null
	end as decimal (10,2)) as inflacion_acumulada
from competencia_02_crudo
where foto_mes in (202010,202011,202012,202101,202102,202103,202104,202105,202106,202107) --para query de modelo
--where foto_mes in (202006,202007,202008,202009,202010,202011,202012,202101,202102,202103,202104,202105,202106,202107) --para clusters
),


 #competencia_02 as (
select *,
	case when mrentabilidad_annual is null or mrentabilidad_annual = 0 then null else mrentabilidad/mrentabilidad_annual end as ganancia_porcentual_mes,
	coalesce(mcomisiones,0) + coalesce(mactivos_margen,0) + coalesce(mpasivos_margen,0) as ganancias_totales_banco,
	coalesce(mcuenta_corriente_adicional,0) + coalesce(mcuenta_corriente,0) as pesos_cta_corriente,
	coalesce(mcaja_ahorro,0) + coalesce(mcaja_ahorro_adicional,0) + coalesce(mcaja_ahorro_dolares,0) as pesos_caja_ahorro,
	case when mcuentas_saldo is null or mcuentas_saldo = 0 then null else (coalesce(mcuenta_corriente_adicional,0) + coalesce(mcuenta_corriente,0))/mcuentas_saldo end as porcentaje_cta_corriente,
	case when mcuentas_saldo is null or mcuentas_saldo = 0 then null else (coalesce(mcaja_ahorro,0) + coalesce(mcaja_ahorro_adicional,0) + coalesce(mcaja_ahorro_dolares,0))/mcuentas_saldo end as porcentaje_caja_ahorro,
	coalesce(ctarjeta_visa_transacciones,0) + coalesce(ctarjeta_master_transacciones,0) as tarjetas_creditos,
	coalesce(mtarjeta_visa_consumo,0) + coalesce(mtarjeta_master_consumo,0) as consumo_pesos_tarjetas_credito,
	coalesce(ctarjeta_visa,0) + coalesce(ctarjeta_master,0) as cantidad_cuentas_tarjeta_credito,
	coalesce(cprestamos_personales,0) + coalesce(cprestamos_hipotecarios,0) + coalesce(cprestamos_prendarios,0) as cantidad_prestamos,
	coalesce(mprestamos_prendarios,0) + coalesce(mprestamos_hipotecarios,0) + coalesce(mprestamos_personales,0) as dinero_prestamos,
	coalesce(mplazo_fijo_dolares,0) + coalesce(mplazo_fijo_pesos,0) + coalesce(minversion1_pesos,0) + coalesce(minversion1_dolares,0) + coalesce(minversion2,0) as dinero_invertido,
	coalesce(cplazo_fijo,0) + coalesce(cinversion1,0) + coalesce(cinversion2,0) as cantidad_inversiones,
	coalesce(cseguro_vida,0) + coalesce(cseguro_auto,0) + coalesce(cseguro_vivienda,0) + coalesce(cseguro_accidentes_personales,0) as cantidad_seguros,
	coalesce(mpayroll,0) + coalesce(mpayroll2,0) as haberes,---
	coalesce(cpayroll2_trx,0) + coalesce(cpayroll_trx,0) as cantidad_haberes,
	coalesce(ctarjeta_visa_debitos_automaticos,0) + coalesce(ctarjeta_master_debitos_automaticos,0) as cantidad_debitos_sobre_tc,
	coalesce(mttarjeta_visa_debitos_automaticos,0) + coalesce(mttarjeta_master_debitos_automaticos,0) as pesos_debitos_sobre_tc,
	coalesce(ctarjeta_visa_descuentos,0) + coalesce(ctarjeta_master_descuentos,0) as cantidad_descuentos_tc,
	coalesce(mtarjeta_visa_descuentos,0) + coalesce(mtarjeta_master_descuentos,0) as pesos_descuentos_tc,
	coalesce(ccomisiones_mantenimiento,0) + coalesce(ccomisiones_otras,0) as cantidad_comisiones_banco_mes,
	coalesce(mcomisiones_mantenimiento,0) + coalesce(mcomisiones_otras,0) as pesos_comisiones_banco_mes,
	case when cproductos is null or cproductos = 0 then null else (coalesce(mcomisiones_mantenimiento,0) + coalesce(mcomisiones_otras,0))/cproductos end as comision_por_producto,
	coalesce(cforex,0) + coalesce(cforex_buy,0) + coalesce(cforex_sell,0) as cantidad_operaciones_forex,
	coalesce(mforex_buy,0) + coalesce(mforex_sell,0) as pesos_forex,
	coalesce(mtransferencias_recibidas,0) + coalesce(mtransferencias_emitidas,0) as volumen_pesos_movidos,
	coalesce(Visa_mlimitecompra,0) + coalesce(Master_mlimitecompra,0) as limite_compra,
	case when mcuentas_saldo is null or mcuentas_saldo = 0 then null else (coalesce(mtransferencias_recibidas,0)+coalesce(mtransferencias_emitidas,0))/mcuentas_saldo end as porcentaje_volumen_movido_saldo
	
from ##competencia_02_crudo2
),


#periodos as (
select distinct foto_mes  from #competencia_02
),

#clientes as (
select distinct numero_de_cliente  from #competencia_02
),
 
#todo as (
select numero_de_cliente, foto_mes  from #clientes left join #periodos on 1 = 1
),


#clase_ternaria_1 as (
select
    t.numero_de_cliente
    , t.foto_mes
    , case when c.numero_de_cliente is null then 0 else 1 end as mes_0 
from #todo t
left join #competencia_02 c on c.numero_de_cliente = t.numero_de_cliente 
	and c.foto_mes = t.foto_mes
),

#tabla_final as (
select
  foto_mes
  , numero_de_cliente
  ,mes_0
  , lead(mes_0, 1) over (partition by numero_de_cliente order by foto_mes) as mes_1
  , lead(mes_0, 2) over (partition by numero_de_cliente order by foto_mes) as mes_2 
from #clase_ternaria_1 where mes_0 = 1
),

#table_final_2 as (
select 
		foto_mes as foto_mes_2,
		numero_de_cliente as numero_de_cliente_2,
case	when foto_mes = '202107' then null
		when mes_0 = 1 and mes_1 = 1 and mes_2 = 1 then 'CONTINUA'
		when mes_0 = 1 and mes_1 is null then 'BAJA+1'
		when mes_0 = 1 and mes_1 = 1 and mes_2 is null then 'BAJA+2'
		end as clase_ternaria
from #tabla_final
),


#competencia_2 as (
select *
from #competencia_02 c
left join #table_final_2 t on c.numero_de_cliente = t.numero_de_cliente_2 and c.foto_mes = t.foto_mes_2
where c.foto_mes in (202010,202011,202012,202101,202102,202103,202104,202105,202107) --para modelo
--where c.foto_mes in (202006,202007,202008,202009,202010,202011,202012,202101,202102,202103,202104,202105,201206,202107) --para clusters
)


select * from (
select 
		numero_de_cliente,
		foto_mes,
		active_quarter,
		lag(active_quarter, 1) over (partition by numero_de_cliente order by foto_mes) as active_quarter_lag_1,
		lag(ctrx_quarter, 1) over (partition by numero_de_cliente order by foto_mes) as ctrx_quarter_lag_1,
		lag(mcuentas_saldo , 1) over (partition by numero_de_cliente order by foto_mes) as mcuentas_saldo_lag_1,
		lag(cantidad_cuentas_tarjeta_credito , 1) over (partition by numero_de_cliente order by foto_mes) as cantidad_cuentas_tarjeta_credito_lag_1,        
		lag(mcuenta_corriente, 1) over (partition by numero_de_cliente order by foto_mes) as mcuenta_corriente_lag_1,
		lag(pesos_cta_corriente, 1) over (partition by numero_de_cliente order by foto_mes) as pesos_cta_corriente_lag_1, 
		lag(dinero_prestamos, 1) over (partition by numero_de_cliente order by foto_mes) as dinero_prestamos_lag_1,
		lag(mprestamos_personales, 1) over (partition by numero_de_cliente order by foto_mes) as mprestamos_personales_lag_1,
		lag(cantidad_prestamos, 1) over (partition by numero_de_cliente order by foto_mes) as cantidad_prestamos_lag_1,  
		lag(cprestamos_personales, 1) over (partition by numero_de_cliente order by foto_mes) as cprestamos_personales_lag_1,          
		lag(mactivos_margen, 1) over (partition by numero_de_cliente order by foto_mes) as mactivos_margen_lag_1,         
		lag(ctarjeta_master, 1) over (partition by numero_de_cliente order by foto_mes) as ctarjeta_master_lag_1,           
		lag(Master_status, 1) over (partition by numero_de_cliente order by foto_mes) as Master_status_lag_1,           
		lag(mcaja_ahorro, 1) over (partition by numero_de_cliente order by foto_mes) as mcaja_ahorro_lag_1,       
		lag(cproductos, 1) over (partition by numero_de_cliente order by foto_mes) as cproductos_lag_1, 
		lag(pesos_caja_ahorro, 1) over (partition by numero_de_cliente order by foto_mes) as pesos_caja_ahorro_lag_1,          
		lag(ctarjeta_visa, 1) over (partition by numero_de_cliente order by foto_mes) as ctarjeta_visa_lag_1,                   
		lag(Visa_status, 1) over (partition by numero_de_cliente order by foto_mes) as Visa_status_lag_1,         
		lag(ccomisiones_otras, 1) over (partition by numero_de_cliente order by foto_mes) as ccomisiones_otras_lag_1,        
		lag(cantidad_comisiones_banco_mes, 1) over (partition by numero_de_cliente order by foto_mes) as cantidad_comisiones_banco_mes_lag_1,       
		lag(consumo_pesos_tarjetas_credito, 1) over (partition by numero_de_cliente order by foto_mes) as consumo_pesos_tarjetas_credito_lag_1,
		lag(mpasivos_margen , 1) over (partition by numero_de_cliente order by foto_mes) as mpasivos_margen_otras_lag_1,          
		lag(ctrx_quarter, 2) over (partition by numero_de_cliente order by foto_mes) as ctrx_quarter_lag_2,
		lag(mcuentas_saldo , 2) over (partition by numero_de_cliente order by foto_mes) as mcuentas_saldo_lag_2,
		lag(cantidad_cuentas_tarjeta_credito , 2) over (partition by numero_de_cliente order by foto_mes) as cantidad_cuentas_tarjeta_credito_lag_2,        
		lag(mcuenta_corriente, 2) over (partition by numero_de_cliente order by foto_mes) as mcuenta_corriente_lag_2,
		lag(pesos_cta_corriente, 2) over (partition by numero_de_cliente order by foto_mes) as pesos_cta_corriente_lag_2, 
		lag(dinero_prestamos, 2) over (partition by numero_de_cliente order by foto_mes) as dinero_prestamos_lag_2,
		lag(mprestamos_personales, 2) over (partition by numero_de_cliente order by foto_mes) as mprestamos_personales_lag_2,
		lag(cantidad_prestamos, 2) over (partition by numero_de_cliente order by foto_mes) as cantidad_prestamos_lag_2,  
		lag(cprestamos_personales, 2) over (partition by numero_de_cliente order by foto_mes) as cprestamos_personales_lag_2,          
		lag(mactivos_margen, 2) over (partition by numero_de_cliente order by foto_mes) as mactivos_margen_lag_2,         
		lag(ctarjeta_master, 2) over (partition by numero_de_cliente order by foto_mes) as ctarjeta_master_lag_2,           
		lag(Master_status, 2) over (partition by numero_de_cliente order by foto_mes) as Master_status_lag_2,           
		lag(mcaja_ahorro, 2) over (partition by numero_de_cliente order by foto_mes) as mcaja_ahorro_lag_2,       
		lag(cproductos, 2) over (partition by numero_de_cliente order by foto_mes) as cproductos_lag_2, 
		/*
		lag(ctrx_quarter, 3) over (partition by numero_de_cliente order by foto_mes) as ctrx_quarter_lag_3,
		lag(mcuentas_saldo , 3) over (partition by numero_de_cliente order by foto_mes) as mcuentas_saldo_lag_3,
		lag(cantidad_cuentas_tarjeta_credito , 3) over (partition by numero_de_cliente order by foto_mes) as cantidad_cuentas_tarjeta_credito_lag_3,        
		lag(mcuenta_corriente, 3) over (partition by numero_de_cliente order by foto_mes) as mcuenta_corriente_lag_3,
		lag(pesos_cta_corriente, 3) over (partition by numero_de_cliente order by foto_mes) as pesos_cta_corriente_lag_3, 
		lag(dinero_prestamos, 3) over (partition by numero_de_cliente order by foto_mes) as dinero_prestamos_lag_3,
		lag(mprestamos_personales, 3) over (partition by numero_de_cliente order by foto_mes) as mprestamos_personales_lag_3,
		lag(cantidad_prestamos, 3) over (partition by numero_de_cliente order by foto_mes) as cantidad_prestamos_lag_3,  
		lag(cprestamos_personales, 3) over (partition by numero_de_cliente order by foto_mes) as cprestamos_personales_lag_3,          
		lag(mactivos_margen, 3) over (partition by numero_de_cliente order by foto_mes) as mactivos_margen_lag_3,         
		lag(ctarjeta_master, 3) over (partition by numero_de_cliente order by foto_mes) as ctarjeta_master_lag_3,           
		lag(Master_status, 3) over (partition by numero_de_cliente order by foto_mes) as Master_status_lag_3,           
		lag(mcaja_ahorro, 3) over (partition by numero_de_cliente order by foto_mes) as mcaja_ahorro_lag_3,       
		lag(cproductos, 3) over (partition by numero_de_cliente order by foto_mes) as cproductos_lag_3, 
		lag(ctrx_quarter, 4) over (partition by numero_de_cliente order by foto_mes) as ctrx_quarter_lag_4,
		lag(mcuentas_saldo , 4) over (partition by numero_de_cliente order by foto_mes) as mcuentas_saldo_lag_4,
		lag(cantidad_cuentas_tarjeta_credito , 4) over (partition by numero_de_cliente order by foto_mes) as cantidad_cuentas_tarjeta_credito_lag_4,        
		lag(mcuenta_corriente, 4) over (partition by numero_de_cliente order by foto_mes) as mcuenta_corriente_lag_4,
		lag(pesos_cta_corriente, 4) over (partition by numero_de_cliente order by foto_mes) as pesos_cta_corriente_lag_4, 
		lag(dinero_prestamos, 4) over (partition by numero_de_cliente order by foto_mes) as dinero_prestamos_lag_4,
		lag(mprestamos_personales, 4) over (partition by numero_de_cliente order by foto_mes) as mprestamos_personales_lag_4,
		lag(cantidad_prestamos, 4) over (partition by numero_de_cliente order by foto_mes) as cantidad_prestamos_lag_4,  
		lag(cprestamos_personales, 4) over (partition by numero_de_cliente order by foto_mes) as cprestamos_personales_lag_4,          
		lag(mactivos_margen, 4) over (partition by numero_de_cliente order by foto_mes) as mactivos_margen_lag_4,         
		lag(ctarjeta_master, 4) over (partition by numero_de_cliente order by foto_mes) as ctarjeta_master_lag_4,           
		lag(Master_status, 4) over (partition by numero_de_cliente order by foto_mes) as Master_status_lag_4,           
		lag(mcaja_ahorro, 4) over (partition by numero_de_cliente order by foto_mes) as mcaja_ahorro_lag_4,       
		lag(cproductos, 4) over (partition by numero_de_cliente order by foto_mes) as cproductos_lag_4,*/
		1.0*ctrx_quarter/COALESCE(NULLIF(lag(ctrx_quarter , 1) over (partition by numero_de_cliente order by foto_mes), 0), null) as var_ctrx_quarter_lag_1,
		1.0*active_quarter/COALESCE(NULLIF(lag(active_quarter , 1) over (partition by numero_de_cliente order by foto_mes), 0), null) as var_active_quarter_lag_1,
		1.0*mcuentas_saldo/COALESCE(NULLIF(lag(mcuentas_saldo , 1) over (partition by numero_de_cliente order by foto_mes), 0), null) as var_mcuentas_saldo_lag_1,
		1.0*cantidad_cuentas_tarjeta_credito/COALESCE(NULLIF(lag(cantidad_cuentas_tarjeta_credito , 1) over (partition by numero_de_cliente order by foto_mes), 0), null) as var_cantidad_cuentas_tarjeta_credito_lag_1,
		1.0*mcuenta_corriente/COALESCE(NULLIF(lag(mcuenta_corriente , 1) over (partition by numero_de_cliente order by foto_mes), 0), null) as var_mcuenta_corriente_lag_1,
		1.0*pesos_cta_corriente/COALESCE(NULLIF(lag(pesos_cta_corriente , 1) over (partition by numero_de_cliente order by foto_mes), 0), null) as var_pesos_cta_corriente_lag_1,
		1.0*dinero_prestamos/COALESCE(NULLIF(lag(dinero_prestamos , 1) over (partition by numero_de_cliente order by foto_mes), 0), null) as var_dinero_prestamos_lag_1,
		1.0*mprestamos_personales/COALESCE(NULLIF(lag(mprestamos_personales , 1) over (partition by numero_de_cliente order by foto_mes), 0), null) as var_mprestamos_personales_lag_1,
		1.0*cantidad_prestamos/COALESCE(NULLIF(lag(cantidad_prestamos , 1) over (partition by numero_de_cliente order by foto_mes), 0), null) as var_cantidad_prestamos_lag_1,
		1.0*cprestamos_personales/COALESCE(NULLIF(lag(cprestamos_personales , 1) over (partition by numero_de_cliente order by foto_mes), 0), null) as var_cprestamos_personales_lag_1,
		1.0*mactivos_margen/COALESCE(NULLIF(lag(mactivos_margen , 1) over (partition by numero_de_cliente order by foto_mes), 0), null) as var_mactivos_margen_lag_1,
		1.0*ctarjeta_master/COALESCE(NULLIF(lag(ctarjeta_master , 1) over (partition by numero_de_cliente order by foto_mes), 0), null) as var_ctarjeta_master_lag_1,
		1.0*Master_status/COALESCE(NULLIF(lag(Master_status , 1) over (partition by numero_de_cliente order by foto_mes), 0), null) as var_Master_status_lag_1,
		1.0*mcaja_ahorro/COALESCE(NULLIF(lag(mcaja_ahorro , 1) over (partition by numero_de_cliente order by foto_mes), 0), null) as var_mcaja_ahorro_lag_1,
		1.0*cproductos/COALESCE(NULLIF(lag(cproductos , 1) over (partition by numero_de_cliente order by foto_mes), 0), null) as var_cproductos_lag_1,
		1.0*pesos_caja_ahorro/COALESCE(NULLIF(lag(pesos_caja_ahorro , 1) over (partition by numero_de_cliente order by foto_mes), 0), null) as var_pesos_caja_ahorro_lag_1,
		1.0*ctarjeta_visa/COALESCE(NULLIF(lag(ctarjeta_visa , 1) over (partition by numero_de_cliente order by foto_mes), 0), null) as var_ctarjeta_visa_lag_1,
		1.0*Visa_status/COALESCE(NULLIF(lag(Visa_status , 1) over (partition by numero_de_cliente order by foto_mes), 0), null) as var_Visa_status_lag_1,
		1.0*ccomisiones_otras/COALESCE(NULLIF(lag(ccomisiones_otras , 1) over (partition by numero_de_cliente order by foto_mes), 0), null) as var_ccomisiones_otras_lag_1,
		1.0*cantidad_comisiones_banco_mes/COALESCE(NULLIF(lag(cantidad_comisiones_banco_mes , 1) over (partition by numero_de_cliente order by foto_mes), 0), null) as var_cantidad_comisiones_banco_mes_lag_1,
		1.0*consumo_pesos_tarjetas_credito/COALESCE(NULLIF(lag(consumo_pesos_tarjetas_credito , 1) over (partition by numero_de_cliente order by foto_mes), 0), null) as var_consumo_pesos_tarjetas_credito_lag_1,
		1.0*mpasivos_margen/COALESCE(NULLIF(lag(mpasivos_margen , 1) over (partition by numero_de_cliente order by foto_mes), 0), null) as var_mpasivos_margen_otras_lag_1,  
		cliente_vip,
		internet,
		cliente_edad,
		cliente_antiguedad,
		cast(mrentabilidad/inflacion_acumulada as int) mrentabilidad,
		cast(mrentabilidad_annual/inflacion_acumulada as int) mrentabilidad_annual,
		cast(mcomisiones/inflacion_acumulada as int) mcomisiones,
		cast(mactivos_margen/inflacion_acumulada as int) mactivos_margen,
		cast(mpasivos_margen/inflacion_acumulada as int) mpasivos_margen,
		cproductos,
		tcuentas,
		ccuenta_corriente,
		cast(mcuenta_corriente_adicional/inflacion_acumulada as int) mcuenta_corriente_adicional,
		cast(mcuenta_corriente/inflacion_acumulada as int) mcuenta_corriente,
		ccaja_ahorro,
		cast(mcaja_ahorro/inflacion_acumulada as int) mcaja_ahorro,
		cast(mcaja_ahorro_adicional/inflacion_acumulada as int) mcaja_ahorro_adicional, 
		cdescubierto_preacordado,
		cast(mcuentas_saldo/inflacion_acumulada as int) mcuentas_saldo,
		ctarjeta_debito,
		ctarjeta_debito_transacciones,
		cast(mautoservicio/inflacion_acumulada as int) mautoservicio,
		ctarjeta_visa,
		ctarjeta_visa_transacciones,
		cast(mtarjeta_visa_consumo/inflacion_acumulada as int) mtarjeta_visa_consumo,
		ctarjeta_master,
		ctarjeta_master_transacciones,
		cast(mtarjeta_master_consumo/inflacion_acumulada as int) mtarjeta_master_consumo,
		cprestamos_personales,
		cast(mprestamos_personales/inflacion_acumulada as int) mprestamos_personales,
		cprestamos_prendarios,
		cast(mprestamos_prendarios/inflacion_acumulada as int) mprestamos_prendarios,
		cprestamos_hipotecarios,
		cast(mprestamos_hipotecarios/inflacion_acumulada as int) mprestamos_hipotecarios,
		cplazo_fijo,
		cast(mplazo_fijo_dolares/inflacion_acumulada as int) mplazo_fijo_dolares,
		cast(mplazo_fijo_pesos/inflacion_acumulada as int) mplazo_fijo_pesos,
		cinversion1,
		cast(minversion1_pesos/inflacion_acumulada as int) minversion1_pesos,
		cast(minversion1_dolares/inflacion_acumulada as int) minversion1_dolares,
		cinversion2,
		cast(minversion2/inflacion_acumulada as int) minversion2,
		cseguro_vida,
		cseguro_auto,
		cseguro_vivienda,
		cseguro_accidentes_personales,
		ccaja_seguridad,
		cpayroll_trx,
		cast(mpayroll/inflacion_acumulada as int) mpayroll,
		cast(mpayroll2/inflacion_acumulada as int) mpayroll2,
		cpayroll2_trx,
		ccuenta_debitos_automaticos,
		cast(mcuenta_debitos_automaticos/inflacion_acumulada as int) mcuenta_debitos_automaticos,
		ctarjeta_visa_debitos_automaticos,
		cast(mttarjeta_visa_debitos_automaticos/inflacion_acumulada as int) mttarjeta_visa_debitos_automaticos,
		ctarjeta_master_debitos_automaticos,
		cast(mttarjeta_master_debitos_automaticos/inflacion_acumulada as int) mttarjeta_master_debitos_automaticos,
		cpagodeservicios,
		cast(mpagodeservicios/inflacion_acumulada as int) mpagodeservicios,
		cpagomiscuentas,
		cast(mpagomiscuentas/inflacion_acumulada as int) mpagomiscuentas,
		ccajeros_propios_descuentos,
		cast(mcajeros_propios_descuentos/inflacion_acumulada as int) mcajeros_propios_descuentos  ,
		ctarjeta_visa_descuentos ,
		cast(mtarjeta_visa_descuentos/inflacion_acumulada as int) mtarjeta_visa_descuentos ,
		ctarjeta_master_descuentos,
		cast(mtarjeta_master_descuentos/inflacion_acumulada as int) mtarjeta_master_descuentos,
		ccomisiones_mantenimiento,
		cast(mcomisiones_mantenimiento/inflacion_acumulada as int) mcomisiones_mantenimiento,
		ccomisiones_otras,
		cast(mcomisiones_otras/inflacion_acumulada as int) mcomisiones_otras ,
		cforex,
		cforex_buy,
		cast(mforex_buy/inflacion_acumulada as int) mforex_buy,
		cforex_sell,
		cast(mforex_sell/inflacion_acumulada as int) mforex_sell ,
		ctransferencias_recibidas,
		cast(mtransferencias_recibidas/inflacion_acumulada as int) mtransferencias_recibidas,
		ctransferencias_emitidas,
		cast(mtransferencias_emitidas/inflacion_acumulada as int) mtransferencias_emitidas,
		cextraccion_autoservicio,
		cast(mextraccion_autoservicio/inflacion_acumulada as int) mextraccion_autoservicio,
		ccheques_depositados,
		cast(mcheques_depositados/inflacion_acumulada as int) mcheques_depositados,
		ccheques_emitidos,
		cast(mcheques_emitidos/inflacion_acumulada as int) mcheques_emitidos,
		ccheques_depositados_rechazados,
		cast(mcheques_depositados_rechazados/inflacion_acumulada as int) mcheques_depositados_rechazados,
		ccheques_emitidos_rechazados,
		cast(mcheques_emitidos_rechazados/inflacion_acumulada as int) mcheques_emitidos_rechazados,
		tcallcenter,
		ccallcenter_transacciones,
		thomebanking,
		chomebanking_transacciones,
		ccajas_transacciones,
		ccajas_consultas,
		ccajas_depositos,
		ccajas_extracciones,
		ccajas_otras,
		catm_trx,
		cast(matm/inflacion_acumulada as int) matm,
		catm_trx_other,
		cast(matm_other/inflacion_acumulada as int) matm_other,
		ctrx_quarter,
		tmobile_app,
		cmobile_app_trx,
		Master_delinquency,
		Master_status,
		cast(Master_mfinanciacion_limite/inflacion_acumulada as int) Master_mfinanciacion_limite,
		Master_Fvencimiento,
		Master_Finiciomora,
		cast(Master_msaldototal/inflacion_acumulada as int) Master_msaldototal,
		cast(Master_msaldodolares/inflacion_acumulada as int) Master_msaldodolares,
		cast(Master_msaldopesos/inflacion_acumulada as int) Master_msaldopesos,
		cast(Master_mconsumospesos/inflacion_acumulada as int) Master_mconsumospesos,
		cast(Master_mconsumosdolares/inflacion_acumulada as int) Master_mconsumosdolares,
		cast(Master_mlimitecompra/inflacion_acumulada as int) Master_mlimitecompra,
		cast(Master_madelantopesos/inflacion_acumulada as int) Master_madelantopesos,
		cast(Master_madelantodolares/inflacion_acumulada as int) Master_madelantodolares,
		Master_fultimo_cierre,
		cast(Master_mpagado/inflacion_acumulada as int) Master_mpagado,
		cast(Master_mpagospesos/inflacion_acumulada as int) Master_mpagospesos,
		cast(Master_mpagosdolares/inflacion_acumulada as int) Master_mpagosdolares,		
		Master_fechaalta,
		cast(Master_mconsumototal/inflacion_acumulada as int) Master_mconsumototal,
		Master_cconsumos,
		Master_cadelantosefectivo,
		cast(Master_mpagominimo/inflacion_acumulada as int) Master_mpagominimo,
		Visa_delinquency,
		Visa_status,
		cast(Visa_mfinanciacion_limite/inflacion_acumulada as int) Visa_mfinanciacion_limite,
		Visa_Fvencimiento,
		Visa_Finiciomora,
		cast(Visa_msaldototal/inflacion_acumulada as int) Visa_msaldototal,
		cast(Visa_msaldopesos/inflacion_acumulada as int) Visa_msaldopesos,
		cast(Visa_msaldodolares/inflacion_acumulada as int) Visa_msaldodolares,
		cast(Visa_mconsumospesos/inflacion_acumulada as int) Visa_mconsumospesos,
		cast(Visa_mconsumosdolares/inflacion_acumulada as int) Visa_mconsumosdolares,
		cast(Visa_mlimitecompra/inflacion_acumulada as int) Visa_mlimitecompra,
		cast(Visa_madelantopesos/inflacion_acumulada as int) Visa_madelantopesos,
		cast(Visa_madelantodolares/inflacion_acumulada as int) Visa_madelantodolares,
		Visa_fultimo_cierre,
		cast(Visa_mpagado/inflacion_acumulada as int) Visa_mpagado,
		cast(Visa_mpagospesos/inflacion_acumulada as int) Visa_mpagospesos,
		cast(Visa_mpagosdolares/inflacion_acumulada as int) Visa_mpagosdolares,
		Visa_fechaalta,
		cast(Visa_mconsumototal/inflacion_acumulada as int) Visa_mconsumototal,
		Visa_cconsumos,
		Visa_cadelantosefectivo,
		cast(Visa_mpagominimo/inflacion_acumulada as int) Visa_mpagominimo,
		ganancia_porcentual_mes,
		cast(ganancias_totales_banco/inflacion_acumulada as int) ganancias_totales_banco,
		cast(pesos_cta_corriente/inflacion_acumulada as int) pesos_cta_corriente,
		cast(pesos_caja_ahorro/inflacion_acumulada as int) pesos_caja_ahorro,
		porcentaje_cta_corriente,
		porcentaje_caja_ahorro,
		tarjetas_creditos,
		cast(consumo_pesos_tarjetas_credito/inflacion_acumulada as int) consumo_pesos_tarjetas_credito,
		cantidad_cuentas_tarjeta_credito,
		cantidad_prestamos,
		cast(dinero_prestamos/inflacion_acumulada as int) dinero_prestamos,
		cast(dinero_invertido/inflacion_acumulada as int) dinero_invertido,
		cantidad_inversiones,
		cantidad_seguros,
		cast(haberes/inflacion_acumulada as int) haberes,
		cantidad_haberes,
		cantidad_debitos_sobre_tc,
		cast(pesos_debitos_sobre_tc/inflacion_acumulada as int) pesos_debitos_sobre_tc,
		cantidad_descuentos_tc,
		cantidad_comisiones_banco_mes,
		cast(pesos_comisiones_banco_mes/inflacion_acumulada as int) pesos_comisiones_banco_mes,
		cast(comision_por_producto/inflacion_acumulada as int) comision_por_producto,
		cantidad_operaciones_forex,
		cast(pesos_forex/inflacion_acumulada as int) pesos_forex,
		cast(volumen_pesos_movidos/inflacion_acumulada as int) volumen_pesos_movidos,
		porcentaje_volumen_movido_saldo,
		clase_ternaria
		--,-RANK() OVER (PARTITION BY numero_de_cliente ORDER BY foto_mes DESC)+1 AS Rank,
		--(ABS(CHECKSUM(NEWID())) % 7) + 1 AS cluster_random,
		--0 as Cluster
from #competencia_2 )a

where 
foto_mes in (202012,202101,202102,202103,202104,202105,202107)
--foto_mes in (202008,202009,202010,202011,202012,202101,202102,202103,202104,202105,202107) --para cluster
--and
--foto_mes <> '202107' and
--numero_de_cliente in (select distinct numero_de_cliente_2 from  #competencia_2 where clase_ternaria = 'BAJA+2') --para cluster
--and Rank >= -5
order by numero_de_cliente, foto_mes asc 




